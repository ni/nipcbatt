name: Publish Package

on:
  release:
    types: [released]


env:
      PYTHON_VERSION: 3.9
      POETRY_VERSION: 1.8.4
      ARCHITECTURE: 'x64'

jobs:
  publish:
    runs-on: [windows-latest]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          architecture: ${{ env.ARCHITECTURE }}
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Check Windows architecture
        shell: pwsh
        run: wmic os get osarchitecture  
      - name: Check Python architecture
        run: python -c "import platform; print('Platform architecture:', platform.architecture())"

      - uses: Gr1N/setup-poetry@v9
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Check Poetry version
        run: poetry --version

      - name: Install the Package
        run: poetry install -vvv
      - name: Check Poetry version
        run: poetry --version

      - name: Lint the Code
        run: poetry run ni-python-styleguide lint

      - name: Run tests
        run: poetry run pytest --verbose --doctest-modules --junitxml=junit/test-results-${{ env.PYTHON_VERSION }}.xml
      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{env.PYTHON_VERSION }}
          path: junit/test-results-${{ env.PYTHON_VERSION }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Build Python package and publish to PyPI
        if: ${{ github.event.release.target_commitish == 'main' }}
        run: |
          poetry publish --build --username __token__ --password ${{ secrets.PYPI_TOKEN}}


      - name: Commit files
        if: ${{ github.event.release.target_commitish == 'main' }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull --tags -f
          git commit -m "Bump package version" -a

      - name: Push changes
        if: ${{ github.event.release.target_commitish == 'main' }}
        uses: CasperWA/push-protected@v2
        with:
          token: ${{ secrets.ADMIN_PAT }}
          branch: ${{ github.event.release.target_commitish }}
          unprotect_reviews: true